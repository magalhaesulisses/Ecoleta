{"ast":null,"code":"var _jsxFileName = \"C:\\\\dev\\\\NLW\\\\web\\\\src\\\\pages\\\\CreatePoint\\\\index.tsx\";\nimport React, { useEffect, useState } from 'react';\nimport './styles.css';\nimport logo from \"../../assets/logo.svg\";\nimport { Link } from 'react-router-dom';\nimport { FiArrowLeft } from 'react-icons/fi';\nimport { Map, TileLayer, Marker } from 'react-leaflet';\nimport api from '../../services/api';\nimport axios from 'axios'; //Estado para array e objeto deve ser informado o tipo da variável que será usada\n\n;\n;\n;\n\nconst CreatePoint = () => {\n  const [items, setItems] = useState([]);\n  const [ufs, setUfs] = useState([]);\n  const [cities, setCities] = useState([]); //Guardar UF\n\n  const [selectedUF, setSelectedUf] = useState('0'); //Guardar Cidade\n\n  const [selectedCity, setSelectedCity] = useState('0'); //Guardar posição selecionada\n\n  const [selectedPosition, setSelectedPosition] = useState([0, 0]); //Trás posição atual\n\n  const [currentPosition, setCurrrentPosition] = useState([0, 0]); //Dados do Form\n\n  const [formData, setFormData] = useState({\n    name: '',\n    email: '',\n    whatsapp: ''\n  });\n  const [selectedItems, setSelectedItems] = useState([]);\n  useEffect(() => {\n    navigator.geolocation.getCurrentPosition(position => {\n      console.log(position);\n      const {\n        latitude,\n        longitude\n      } = position.coords;\n      setCurrrentPosition([latitude, longitude]);\n    });\n  }, []);\n  useEffect(() => {\n    api.get('items').then(response => {\n      setItems(response.data); //console.log(response.data);\n    });\n  }, []);\n  useEffect(() => {\n    axios.get('https://servicodados.ibge.gov.br/api/v1/localidades/estados').then(response => {\n      const ufInitials = response.data.map(uf => uf.sigla);\n      setUfs(ufInitials);\n    });\n  }, []);\n  useEffect(() => {\n    //Verifica se UF está com valor padrão\n    if (selectedUF === '0') {\n      return;\n    } //Necessário UF para carregar as cidades!\n\n\n    axios.get(`https://servicodados.ibge.gov.br/api/v1/localidades/estados/${selectedUF}/municipios`).then(response => {\n      const cityNames = response.data.map(city => city.nome);\n      setCities(cityNames);\n    });\n  }, [selectedUF]);\n\n  function handleSelectUf(event) {\n    const uf = event.target.value;\n    setSelectedUf(uf);\n  }\n\n  ;\n\n  function handleSelectCity(event) {\n    const city = event.target.value;\n    setSelectedCity(city);\n  }\n\n  ;\n\n  function handleSelectItem(id) {\n    const alreadySelected = selectedItems.findIndex(item => item === id);\n\n    if (alreadySelected > -1) {\n      const filteredItems = selectedItems.filter(item => item !== id);\n      setSelectedItems(filteredItems);\n    } else {\n      setSelectedItems([...selectedItems, id]);\n    }\n  }\n\n  ;\n\n  function handleMapClick(event) {\n    setSelectedPosition([event.latlng.lat, event.latlng.lng]);\n    console.log(event.latlng);\n  }\n\n  ;\n\n  function handleInputChange(event) {\n    const {\n      name,\n      value\n    } = event.target;\n    setFormData({ ...formData,\n      [name]: value\n    });\n    setFormData({ ...formData,\n      [name]: value\n    });\n  }\n\n  ;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"page-create-point\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: logo,\n    alt: \"Ecoleta\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FiArrowLeft, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }\n  }), \"Voltar para home\")), /*#__PURE__*/React.createElement(\"form\", {\n    action: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }\n  }, \"Cadastro do \", /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 29\n    }\n  }), \" ponto de coleta\"), /*#__PURE__*/React.createElement(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"legend\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 21\n    }\n  }, \"Dados\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 21\n    }\n  }, \"Nome da entidade:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"name\",\n    id: \"name\",\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 25\n    }\n  }, \"Email:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    name: \"email\",\n    id: \"email\",\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 25\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"whatsapp\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 25\n    }\n  }, \"Whatsapp:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"whatsapp\",\n    id: \"whatsapp\",\n    onChange: handleInputChange,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 25\n    }\n  })))), /*#__PURE__*/React.createElement(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"legend\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 21\n    }\n  }, \"Endere\\xE7o\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 21\n    }\n  }, \"Selecione o endere\\xE7o no mapa\")), /*#__PURE__*/React.createElement(Map, {\n    center: currentPosition,\n    zoom: 15,\n    onClick: handleMapClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(TileLayer, {\n    attribution: \"&copy <a href=\\\"https://osm.org/copyright\\\">OpenStreetMap</a> contributors\",\n    url: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(Marker, {\n    position: selectedPosition,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field-group\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"uf\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 25\n    }\n  }, \"Estado (UF):\"), /*#__PURE__*/React.createElement(\"select\", {\n    onChange: handleSelectUf,\n    value: selectedUF,\n    name: \"uf\",\n    id: \"uf\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 29\n    }\n  }, \"Selecione uma UF\"), ufs.map(uf => /*#__PURE__*/React.createElement(\"option\", {\n    key: uf,\n    value: uf,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 29\n    }\n  }, uf)), \";\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"field\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: \"city\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 25\n    }\n  }, \"Cidade:\"), /*#__PURE__*/React.createElement(\"select\", {\n    onChange: handleSelectCity,\n    value: selectedCity,\n    name: \"city\",\n    id: \"city\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 29\n    }\n  }, \"Selecione uma Cidade\"), cities.map(city => /*#__PURE__*/React.createElement(\"option\", {\n    key: city,\n    value: city,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 33\n    }\n  }, city)), \";\")))), /*#__PURE__*/React.createElement(\"fieldset\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"legend\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 21\n    }\n  }, \"Itens de coleta\"), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 21\n    }\n  }, \"Selecione um ou mais itens abaixo\")), /*#__PURE__*/React.createElement(\"ul\", {\n    className: \"items-grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 17\n    }\n  }, items.map(item => /*#__PURE__*/React.createElement(\"li\", {\n    key: item.id,\n    onClick: () => handleSelectItem(item.id),\n    className: selectedItems.includes(item.id) ? 'selected' : '',\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    src: item.image_url,\n    alt: item.title,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 25\n    }\n  }, item.title))), \";\")), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 13\n    }\n  }, \"Cadastrar ponto de coleta\")));\n};\n\nexport default CreatePoint;","map":{"version":3,"sources":["C:/dev/NLW/web/src/pages/CreatePoint/index.tsx"],"names":["React","useEffect","useState","Link","FiArrowLeft","Map","TileLayer","Marker","api","axios","CreatePoint","items","setItems","ufs","setUfs","cities","setCities","selectedUF","setSelectedUf","selectedCity","setSelectedCity","selectedPosition","setSelectedPosition","currentPosition","setCurrrentPosition","formData","setFormData","name","email","whatsapp","selectedItems","setSelectedItems","navigator","geolocation","getCurrentPosition","position","console","log","latitude","longitude","coords","get","then","response","data","ufInitials","map","uf","sigla","cityNames","city","nome","handleSelectUf","event","target","value","handleSelectCity","handleSelectItem","id","alreadySelected","findIndex","item","filteredItems","filter","handleMapClick","latlng","lat","lng","handleInputChange","logo","includes","image_url","title"],"mappings":"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","sourcesContent":["import React, {useEffect, useState, ChangeEvent} from 'react';\r\nimport './styles.css';\r\nimport logo from '../../assets/logo.svg';\r\nimport {Link} from 'react-router-dom';\r\nimport {FiArrowLeft} from 'react-icons/fi';\r\nimport {Map, TileLayer, Marker } from 'react-leaflet';\r\nimport {LeafletMouseEvent} from 'leaflet';\r\nimport api from '../../services/api';\r\nimport axios from 'axios';\r\n\r\n\r\n//Estado para array e objeto deve ser informado o tipo da variável que será usada\r\ninterface Item {\r\n    id: number,\r\n    title: string;\r\n    image_url: string;\r\n};\r\n\r\ninterface IBGEUFResponse {\r\n    sigla:string;\r\n};\r\n\r\ninterface IBGECityResponse {\r\n    nome:string;\r\n};\r\n\r\nconst CreatePoint = () =>{\r\n    const [items, setItems] = useState<Item[]>([]);\r\n    const [ufs, setUfs] = useState<string[]>([]);\r\n    const [cities, setCities] = useState<string[]>([]);\r\n    //Guardar UF\r\n    const [selectedUF, setSelectedUf] = useState('0');\r\n    //Guardar Cidade\r\n    const [selectedCity, setSelectedCity] = useState('0');\r\n    //Guardar posição selecionada\r\n    const [selectedPosition, setSelectedPosition] = useState<[number, number]>([0,0]);\r\n    //Trás posição atual\r\n    const [currentPosition, setCurrrentPosition] = useState<[number, number]>([0,0]);\r\n    //Dados do Form\r\n    const [formData, setFormData] = useState({\r\n        name: '',\r\n        email: '',\r\n        whatsapp: '',\r\n    });\r\n    const [selectedItems, setSelectedItems] = useState<number[]>([]);\r\n\r\n    useEffect(() => {\r\n        navigator.geolocation.getCurrentPosition(position => {\r\n            console.log(position);\r\n            const { latitude , longitude } = position.coords;\r\n            setCurrrentPosition([latitude, longitude]);\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        api.get('items').then(response => {\r\n            setItems(response.data);\r\n            //console.log(response.data);\r\n        });\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        axios.get<IBGEUFResponse[]>('https://servicodados.ibge.gov.br/api/v1/localidades/estados').then(response => {  \r\n        const ufInitials = response.data.map(uf => uf.sigla) \r\n        setUfs(ufInitials);   \r\n        });\r\n    }, []);\r\n\r\n    useEffect(() =>{\r\n        //Verifica se UF está com valor padrão\r\n        if (selectedUF === '0'){\r\n            return;\r\n        }\r\n        //Necessário UF para carregar as cidades!\r\n        axios.get<IBGECityResponse[]>(`https://servicodados.ibge.gov.br/api/v1/localidades/estados/${selectedUF}/municipios`).then(response => {  \r\n        const cityNames = response.data.map(city => city.nome) \r\n        setCities(cityNames);   \r\n        });\r\n    \r\n    },[selectedUF]);\r\n\r\n    function handleSelectUf(event: ChangeEvent<HTMLSelectElement>){\r\n        const uf = event.target.value;\r\n        setSelectedUf(uf);\r\n    };\r\n    function handleSelectCity(event: ChangeEvent<HTMLSelectElement>){\r\n        const city = event.target.value;\r\n        setSelectedCity(city);\r\n    };\r\n    function handleSelectItem(id:number){\r\n        const alreadySelected = selectedItems.findIndex(item=> item === id);\r\n        if (alreadySelected > -1){\r\n            const filteredItems = selectedItems.filter(item=> item !== id);\r\n            setSelectedItems(filteredItems);\r\n        }else{\r\n            setSelectedItems([ ...selectedItems, id]);\r\n        }\r\n    };\r\n    function handleMapClick(event: LeafletMouseEvent){\r\n        setSelectedPosition([\r\n            event.latlng.lat,\r\n            event.latlng.lng\r\n        ])\r\n        console.log(event.latlng);\r\n    };\r\n    function handleInputChange(event: ChangeEvent<HTMLInputElement>){\r\n    const {name, value} = event.target;\r\n        setFormData({...formData, [name]: value });\r\n        setFormData({...formData, [name]: value });\r\n    };\r\n\r\n\r\n    return (\r\n    <div id=\"page-create-point\">\r\n        <header>\r\n            <img src={logo} alt=\"Ecoleta\"/>\r\n            <Link to=\"/\">\r\n                <FiArrowLeft/>\r\n                Voltar para home\r\n            </Link>\r\n        </header>\r\n        <form action=\"\">\r\n            <h1>Cadastro do <br/> ponto de coleta</h1>\r\n            <fieldset>\r\n                <legend>\r\n                    <h2>Dados</h2>\r\n                </legend>\r\n                <div className=\"field\">\r\n                    <label htmlFor=\"name\">Nome da entidade:</label>\r\n                    <input\r\n                    type=\"text\"\r\n                    name=\"name\"\r\n                    id=\"name\"\r\n                    onChange = {handleInputChange}\r\n                    />\r\n                </div>\r\n                <div className=\"field-group\">\r\n                    <div className=\"field\">\r\n                        <label htmlFor=\"email\">Email:</label>\r\n                        <input\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        id=\"email\"\r\n                        onChange = {handleInputChange}\r\n                        />\r\n                    </div>\r\n                    <div className=\"field\">\r\n                        <label htmlFor=\"whatsapp\">Whatsapp:</label>\r\n                        <input\r\n                        type=\"text\"\r\n                        name=\"whatsapp\"\r\n                        id=\"whatsapp\"\r\n                        onChange = {handleInputChange}\r\n                        />\r\n                    </div>\r\n                </div>\r\n            </fieldset>\r\n            <fieldset>\r\n                <legend>\r\n                    <h2>Endereço</h2>\r\n                    <span>Selecione o endereço no mapa</span>\r\n                </legend>\r\n                <Map center={currentPosition} zoom={15} onClick={handleMapClick}>\r\n                    <TileLayer\r\n                    attribution='&amp;copy <a href=\"https://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n                    url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n                    />\r\n                    <Marker position={selectedPosition}/>\r\n                </Map>\r\n\r\n                <div className=\"field-group\">\r\n                    <div className=\"field\">\r\n                        <label htmlFor=\"uf\">Estado (UF):</label>\r\n                        <select onChange={handleSelectUf} \r\n                                value={selectedUF} \r\n                                name=\"uf\" \r\n                                id=\"uf\">\r\n\r\n                            <option value=\"0\">Selecione uma UF</option>\r\n                            {ufs.map(uf => (\r\n                            <option key={uf} value={uf}>{uf}</option> \r\n                            ))};\r\n                        </select>\r\n                    </div>\r\n                    <div className=\"field\">\r\n                        <label htmlFor=\"city\">Cidade:</label>\r\n                        <select onChange={handleSelectCity} \r\n                                value={selectedCity} \r\n                                name=\"city\" \r\n                                id=\"city\">\r\n\r\n                            <option value=\"0\">Selecione uma Cidade</option>\r\n                            {cities.map(city => (\r\n                                <option key={city} value={city}>{city}</option>\r\n                            ))};\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n            </fieldset>\r\n            <fieldset>\r\n                <legend>\r\n                    <h2>Itens de coleta</h2>\r\n                    <span>Selecione um ou mais itens abaixo</span>\r\n                </legend>\r\n                <ul className=\"items-grid\">\r\n                   {items.map(item => (\r\n                    <li key={item.id} \r\n                        onClick={() => handleSelectItem(item.id)}\r\n                        className={selectedItems.includes(item.id) ? 'selected' : ''}    \r\n                    >\r\n                        <img src={item.image_url} alt={item.title}/>\r\n                        <span>{item.title}</span>\r\n                    </li>\r\n                   ))};\r\n                    \r\n                </ul>\r\n            </fieldset>\r\n            <button type=\"submit\">Cadastrar ponto de coleta</button>\r\n        </form>\r\n        \r\n    </div>);\r\n};\r\n\r\nexport default CreatePoint;"]},"metadata":{},"sourceType":"module"}